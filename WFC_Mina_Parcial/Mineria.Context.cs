//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoServiceInfracciones
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MineriaEntities : DbContext
    {
        public MineriaEntities()
            : base("name=MineriaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auditoria> Auditoria { get; set; }
        public virtual DbSet<Cargos> Cargos { get; set; }
        public virtual DbSet<Detalle_Extraccion> Detalle_Extraccion { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Extraccion> Extraccion { get; set; }
        public virtual DbSet<Mantenimiento> Mantenimiento { get; set; }
        public virtual DbSet<Maquinaria> Maquinaria { get; set; }
        public virtual DbSet<Mineral> Mineral { get; set; }
        public virtual DbSet<Ubigeo> Ubigeo { get; set; }
        public virtual DbSet<Unidad> Unidad { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Yacimiento> Yacimiento { get; set; }
        public virtual DbSet<Empleado_Aud> Empleado_Aud { get; set; }
        public virtual DbSet<Extraccion_aud> Extraccion_aud { get; set; }
        public virtual DbSet<Mantenimiento_aud> Mantenimiento_aud { get; set; }
        public virtual DbSet<Maquinaria_aud> Maquinaria_aud { get; set; }
        public virtual DbSet<Yacimiento_aud> Yacimiento_aud { get; set; }
    
        public virtual int usp_ActualizarEmpleado(string id_empleado, string nombre, string apellidopat, string apellidomat, string documento, Nullable<decimal> sueldo, Nullable<System.DateTime> fec_nac, string sexo, string telefono, string correo, string foto, string id_ubigeo, Nullable<int> id_cargo, string est_emp, string usu_reg)
        {
            var id_empleadoParameter = id_empleado != null ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidopatParameter = apellidopat != null ?
                new ObjectParameter("apellidopat", apellidopat) :
                new ObjectParameter("apellidopat", typeof(string));
    
            var apellidomatParameter = apellidomat != null ?
                new ObjectParameter("apellidomat", apellidomat) :
                new ObjectParameter("apellidomat", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var sueldoParameter = sueldo.HasValue ?
                new ObjectParameter("sueldo", sueldo) :
                new ObjectParameter("sueldo", typeof(decimal));
    
            var fec_nacParameter = fec_nac.HasValue ?
                new ObjectParameter("fec_nac", fec_nac) :
                new ObjectParameter("fec_nac", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var id_ubigeoParameter = id_ubigeo != null ?
                new ObjectParameter("id_ubigeo", id_ubigeo) :
                new ObjectParameter("id_ubigeo", typeof(string));
    
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var est_empParameter = est_emp != null ?
                new ObjectParameter("est_emp", est_emp) :
                new ObjectParameter("est_emp", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarEmpleado", id_empleadoParameter, nombreParameter, apellidopatParameter, apellidomatParameter, documentoParameter, sueldoParameter, fec_nacParameter, sexoParameter, telefonoParameter, correoParameter, fotoParameter, id_ubigeoParameter, id_cargoParameter, est_empParameter, usu_regParameter);
        }
    
        public virtual int usp_ActualizarExtraccion(string id_extraccion, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string est_extraccion, string id_yacimiento, string usu_reg, string usu_ult_mod)
        {
            var id_extraccionParameter = id_extraccion != null ?
                new ObjectParameter("id_extraccion", id_extraccion) :
                new ObjectParameter("id_extraccion", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var est_extraccionParameter = est_extraccion != null ?
                new ObjectParameter("est_extraccion", est_extraccion) :
                new ObjectParameter("est_extraccion", typeof(string));
    
            var id_yacimientoParameter = id_yacimiento != null ?
                new ObjectParameter("id_yacimiento", id_yacimiento) :
                new ObjectParameter("id_yacimiento", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            var usu_ult_modParameter = usu_ult_mod != null ?
                new ObjectParameter("usu_ult_mod", usu_ult_mod) :
                new ObjectParameter("usu_ult_mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarExtraccion", id_extraccionParameter, fechaInicioParameter, fechaFinParameter, est_extraccionParameter, id_yacimientoParameter, usu_regParameter, usu_ult_modParameter);
        }
    
        public virtual int usp_ActualizarMantenimiento(string id_mantenimiento, string id_maquinaria, string tipo, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string est_man, string comentario, string usu_ult_mod)
        {
            var id_mantenimientoParameter = id_mantenimiento != null ?
                new ObjectParameter("id_mantenimiento", id_mantenimiento) :
                new ObjectParameter("id_mantenimiento", typeof(string));
    
            var id_maquinariaParameter = id_maquinaria != null ?
                new ObjectParameter("id_maquinaria", id_maquinaria) :
                new ObjectParameter("id_maquinaria", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var est_manParameter = est_man != null ?
                new ObjectParameter("est_man", est_man) :
                new ObjectParameter("est_man", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var usu_ult_modParameter = usu_ult_mod != null ?
                new ObjectParameter("usu_ult_mod", usu_ult_mod) :
                new ObjectParameter("usu_ult_mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarMantenimiento", id_mantenimientoParameter, id_maquinariaParameter, tipoParameter, fechaInicioParameter, fechaFinParameter, est_manParameter, comentarioParameter, usu_ult_modParameter);
        }
    
        public virtual int usp_ActualizarMaquinaria(string id_maquinaria, string id_yacimiento, string tipo, string marca, string modelo, string est_maq, Nullable<System.DateTime> ultRevision, string usu_ult_mod)
        {
            var id_maquinariaParameter = id_maquinaria != null ?
                new ObjectParameter("id_maquinaria", id_maquinaria) :
                new ObjectParameter("id_maquinaria", typeof(string));
    
            var id_yacimientoParameter = id_yacimiento != null ?
                new ObjectParameter("id_yacimiento", id_yacimiento) :
                new ObjectParameter("id_yacimiento", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var est_maqParameter = est_maq != null ?
                new ObjectParameter("est_maq", est_maq) :
                new ObjectParameter("est_maq", typeof(string));
    
            var ultRevisionParameter = ultRevision.HasValue ?
                new ObjectParameter("UltRevision", ultRevision) :
                new ObjectParameter("UltRevision", typeof(System.DateTime));
    
            var usu_ult_modParameter = usu_ult_mod != null ?
                new ObjectParameter("usu_ult_mod", usu_ult_mod) :
                new ObjectParameter("usu_ult_mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarMaquinaria", id_maquinariaParameter, id_yacimientoParameter, tipoParameter, marcaParameter, modeloParameter, est_maqParameter, ultRevisionParameter, usu_ult_modParameter);
        }
    
        public virtual int usp_ActualizarYacimiento(string idYacimiento, string nombre, string idUbigeo, Nullable<System.DateTime> fecInicio, string estado, string usuUltMod)
        {
            var idYacimientoParameter = idYacimiento != null ?
                new ObjectParameter("idYacimiento", idYacimiento) :
                new ObjectParameter("idYacimiento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var idUbigeoParameter = idUbigeo != null ?
                new ObjectParameter("idUbigeo", idUbigeo) :
                new ObjectParameter("idUbigeo", typeof(string));
    
            var fecInicioParameter = fecInicio.HasValue ?
                new ObjectParameter("fecInicio", fecInicio) :
                new ObjectParameter("fecInicio", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var usuUltModParameter = usuUltMod != null ?
                new ObjectParameter("usuUltMod", usuUltMod) :
                new ObjectParameter("usuUltMod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarYacimiento", idYacimientoParameter, nombreParameter, idUbigeoParameter, fecInicioParameter, estadoParameter, usuUltModParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarEmpleado_Result> usp_ConsultarEmpleado(string id_empleado)
        {
            var id_empleadoParameter = id_empleado != null ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarEmpleado_Result>("usp_ConsultarEmpleado", id_empleadoParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarExtraccion_Result> usp_ConsultarExtraccion(string id_extraccion)
        {
            var id_extraccionParameter = id_extraccion != null ?
                new ObjectParameter("id_extraccion", id_extraccion) :
                new ObjectParameter("id_extraccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarExtraccion_Result>("usp_ConsultarExtraccion", id_extraccionParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarMantenimiento_Result> usp_ConsultarMantenimiento(string id_mantenimiento)
        {
            var id_mantenimientoParameter = id_mantenimiento != null ?
                new ObjectParameter("id_mantenimiento", id_mantenimiento) :
                new ObjectParameter("id_mantenimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarMantenimiento_Result>("usp_ConsultarMantenimiento", id_mantenimientoParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarMaquinaria_Result> usp_ConsultarMaquinaria(string id_maquinaria)
        {
            var id_maquinariaParameter = id_maquinaria != null ?
                new ObjectParameter("id_maquinaria", id_maquinaria) :
                new ObjectParameter("id_maquinaria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarMaquinaria_Result>("usp_ConsultarMaquinaria", id_maquinariaParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarYacimiento_Result> usp_ConsultarYacimiento(string idYacimiento)
        {
            var idYacimientoParameter = idYacimiento != null ?
                new ObjectParameter("idYacimiento", idYacimiento) :
                new ObjectParameter("idYacimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarYacimiento_Result>("usp_ConsultarYacimiento", idYacimientoParameter);
        }
    
        public virtual int usp_EliminarEmpleado(string id_empleado)
        {
            var id_empleadoParameter = id_empleado != null ?
                new ObjectParameter("id_empleado", id_empleado) :
                new ObjectParameter("id_empleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarEmpleado", id_empleadoParameter);
        }
    
        public virtual int usp_EliminarExtraccion(string id_extraccion)
        {
            var id_extraccionParameter = id_extraccion != null ?
                new ObjectParameter("id_extraccion", id_extraccion) :
                new ObjectParameter("id_extraccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarExtraccion", id_extraccionParameter);
        }
    
        public virtual int usp_EliminarMantenimiento(string id_mantenimiento)
        {
            var id_mantenimientoParameter = id_mantenimiento != null ?
                new ObjectParameter("id_mantenimiento", id_mantenimiento) :
                new ObjectParameter("id_mantenimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarMantenimiento", id_mantenimientoParameter);
        }
    
        public virtual int usp_EliminarMaquinaria(string id_maquinaria)
        {
            var id_maquinariaParameter = id_maquinaria != null ?
                new ObjectParameter("id_maquinaria", id_maquinaria) :
                new ObjectParameter("id_maquinaria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarMaquinaria", id_maquinariaParameter);
        }
    
        public virtual int usp_EliminarYacimiento(string idYacimiento)
        {
            var idYacimientoParameter = idYacimiento != null ?
                new ObjectParameter("idYacimiento", idYacimiento) :
                new ObjectParameter("idYacimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarYacimiento", idYacimientoParameter);
        }
    
        public virtual int usp_InsertaExtraccion(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string est_extraccion, string id_yacimiento, string usu_reg)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var est_extraccionParameter = est_extraccion != null ?
                new ObjectParameter("est_extraccion", est_extraccion) :
                new ObjectParameter("est_extraccion", typeof(string));
    
            var id_yacimientoParameter = id_yacimiento != null ?
                new ObjectParameter("id_yacimiento", id_yacimiento) :
                new ObjectParameter("id_yacimiento", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertaExtraccion", fechaInicioParameter, fechaFinParameter, est_extraccionParameter, id_yacimientoParameter, usu_regParameter);
        }
    
        public virtual int usp_InsertarEmpleado(string nombre, string apellidopat, string apellidomat, string documento, Nullable<decimal> sueldo, Nullable<System.DateTime> fec_nac, string sexo, string telefono, string correo, string foto, string id_ubigeo, Nullable<int> id_cargo, string est_emp, string usu_reg)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidopatParameter = apellidopat != null ?
                new ObjectParameter("apellidopat", apellidopat) :
                new ObjectParameter("apellidopat", typeof(string));
    
            var apellidomatParameter = apellidomat != null ?
                new ObjectParameter("apellidomat", apellidomat) :
                new ObjectParameter("apellidomat", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var sueldoParameter = sueldo.HasValue ?
                new ObjectParameter("sueldo", sueldo) :
                new ObjectParameter("sueldo", typeof(decimal));
    
            var fec_nacParameter = fec_nac.HasValue ?
                new ObjectParameter("fec_nac", fec_nac) :
                new ObjectParameter("fec_nac", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            var id_ubigeoParameter = id_ubigeo != null ?
                new ObjectParameter("id_ubigeo", id_ubigeo) :
                new ObjectParameter("id_ubigeo", typeof(string));
    
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var est_empParameter = est_emp != null ?
                new ObjectParameter("est_emp", est_emp) :
                new ObjectParameter("est_emp", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarEmpleado", nombreParameter, apellidopatParameter, apellidomatParameter, documentoParameter, sueldoParameter, fec_nacParameter, sexoParameter, telefonoParameter, correoParameter, fotoParameter, id_ubigeoParameter, id_cargoParameter, est_empParameter, usu_regParameter);
        }
    
        public virtual int usp_InsertarMantenimiento(string id_maquinaria, string tipo, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string est_man, string comentario, string usu_reg)
        {
            var id_maquinariaParameter = id_maquinaria != null ?
                new ObjectParameter("id_maquinaria", id_maquinaria) :
                new ObjectParameter("id_maquinaria", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var est_manParameter = est_man != null ?
                new ObjectParameter("est_man", est_man) :
                new ObjectParameter("est_man", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarMantenimiento", id_maquinariaParameter, tipoParameter, fechaInicioParameter, fechaFinParameter, est_manParameter, comentarioParameter, usu_regParameter);
        }
    
        public virtual int usp_InsertarMaquinaria(string id_yacimiento, string tipo, string marca, string modelo, string est_maq, Nullable<System.DateTime> ultRevision, string usu_reg)
        {
            var id_yacimientoParameter = id_yacimiento != null ?
                new ObjectParameter("id_yacimiento", id_yacimiento) :
                new ObjectParameter("id_yacimiento", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var est_maqParameter = est_maq != null ?
                new ObjectParameter("est_maq", est_maq) :
                new ObjectParameter("est_maq", typeof(string));
    
            var ultRevisionParameter = ultRevision.HasValue ?
                new ObjectParameter("UltRevision", ultRevision) :
                new ObjectParameter("UltRevision", typeof(System.DateTime));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarMaquinaria", id_yacimientoParameter, tipoParameter, marcaParameter, modeloParameter, est_maqParameter, ultRevisionParameter, usu_regParameter);
        }
    
        public virtual int usp_InsertarYacimiento(string nombre, string idUbigeo, Nullable<System.DateTime> fecInicio, string estado, string usu_reg)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var idUbigeoParameter = idUbigeo != null ?
                new ObjectParameter("idUbigeo", idUbigeo) :
                new ObjectParameter("idUbigeo", typeof(string));
    
            var fecInicioParameter = fecInicio.HasValue ?
                new ObjectParameter("fecInicio", fecInicio) :
                new ObjectParameter("fecInicio", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarYacimiento", nombreParameter, idUbigeoParameter, fecInicioParameter, estadoParameter, usu_regParameter);
        }
    
        public virtual ObjectResult<usp_ListarEmpleado_Result> usp_ListarEmpleado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarEmpleado_Result>("usp_ListarEmpleado");
        }
    
        public virtual ObjectResult<usp_ListarExtraccion_Result> usp_ListarExtraccion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarExtraccion_Result>("usp_ListarExtraccion");
        }
    
        public virtual int usp_ListarExtracciones_Paginacion(string id_yacimiento, string nombre, string est_extraccion, ObjectParameter nUMREG)
        {
            var id_yacimientoParameter = id_yacimiento != null ?
                new ObjectParameter("id_yacimiento", id_yacimiento) :
                new ObjectParameter("id_yacimiento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var est_extraccionParameter = est_extraccion != null ?
                new ObjectParameter("est_extraccion", est_extraccion) :
                new ObjectParameter("est_extraccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ListarExtracciones_Paginacion", id_yacimientoParameter, nombreParameter, est_extraccionParameter, nUMREG);
        }
    
        public virtual ObjectResult<usp_ListarMantenimiento_Result> usp_ListarMantenimiento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarMantenimiento_Result>("usp_ListarMantenimiento");
        }
    
        public virtual ObjectResult<usp_ListarMaquinaria_Result> usp_ListarMaquinaria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarMaquinaria_Result>("usp_ListarMaquinaria");
        }
    
        public virtual ObjectResult<usp_ListarYacimiento_Result> usp_ListarYacimiento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarYacimiento_Result>("usp_ListarYacimiento");
        }
    
        public virtual int usp_RegistrarExtraMinerales(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string est_extraccion, string id_yacimiento, string usu_reg, ObjectParameter id_extraccion)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var est_extraccionParameter = est_extraccion != null ?
                new ObjectParameter("est_extraccion", est_extraccion) :
                new ObjectParameter("est_extraccion", typeof(string));
    
            var id_yacimientoParameter = id_yacimiento != null ?
                new ObjectParameter("id_yacimiento", id_yacimiento) :
                new ObjectParameter("id_yacimiento", typeof(string));
    
            var usu_regParameter = usu_reg != null ?
                new ObjectParameter("usu_reg", usu_reg) :
                new ObjectParameter("usu_reg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarExtraMinerales", fechaInicioParameter, fechaFinParameter, est_extraccionParameter, id_yacimientoParameter, usu_regParameter, id_extraccion);
        }
    }
}
